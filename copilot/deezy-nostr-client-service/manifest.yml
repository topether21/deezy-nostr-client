# The manifest for the "deezy-nostr-client-service" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/
#  https://aws.github.io/copilot-cli/docs/developing/domain/
#  https://towardsthecloud.com/aws-copilot-cli-deploy-containers-tutorial
#  https://aws.github.io/copilot-cli/blogs/release-v121/#cloudfront-with-https

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: deezy-nostr-client-service
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'

# platform: linux/arm64
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  build: Dockerfile
  # Port exposed through your container to route traffic to it.
  port: 80

cpu: 256 # Number of CPU units for the task.
memory: 512 # Amount of memory in MiB used by the task.
count: 1 # Number of tasks that should be running in your service.
exec: true # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

#  https://aws.github.io/copilot-cli/docs/developing/secrets/
secrets:
  REDIS_PASSWORD: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/REDIS_PASSWORD

variables: # Pass environment variables as key value pairs.
  PORT: 80
  MICROSERVICE_KEY: 'xxx'
  TRACKING_WEBHOOK: 'https://9nukpegt2c.execute-api.us-east-1.amazonaws.com'
  HOSTNAME: '0.0.0.0'
  MIN_NON_TEXT_ITEMS: 500
  MAX_CAPACITY: 600
  REDIS_HOST: 'redis-10272.c124.us-central1-1.gce.cloud.redislabs.com'
  REDIS_PORT: 10272
  REDIS_TYPE: 'cloud'

environments:
  dev:
    count: 1
    deployment:
      rolling: 'default'
# storage:
# readonly_fs: true       # Limit to read-only access to mounted root filesystems.
